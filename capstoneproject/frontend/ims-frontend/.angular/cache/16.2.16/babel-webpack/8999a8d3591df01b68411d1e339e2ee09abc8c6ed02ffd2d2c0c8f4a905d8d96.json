{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(auth, router) {\n      this.auth = auth;\n      this.router = router;\n      this.username = '';\n      this.password = '';\n      this.confirm = '';\n      this.user_id = '';\n    }\n    doRegister() {\n      if (this.password !== this.confirm) {\n        alert('Passwords do not match');\n        return;\n      }\n      const uid = Number(this.user_id);\n      if (isNaN(uid) || uid < 0) {\n        alert('User ID must be a non-negative number');\n        return;\n      }\n      this.auth.register(this.username, this.password, uid).subscribe({\n        next: () => {\n          alert('Registered. Please login.');\n          this.router.navigateByUrl('/login');\n        },\n        error: err => alert(err?.error?.error || 'Registration failed')\n      });\n    }\n    static {\n      this.ɵfac = function RegisterComponent_Factory(t) {\n        return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: RegisterComponent,\n        selectors: [[\"app-register\"]],\n        decls: 15,\n        vars: 4,\n        consts: [[1, \"row\", \"justify-content-center\"], [1, \"col-md-5\"], [1, \"card\", \"p-3\", \"shadow-sm\"], [1, \"mb-2\"], [\"placeholder\", \"Email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"placeholder\", \"Confirm Password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"placeholder\", \"User ID\", \"min\", \"0\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", \"w-100\", 3, \"click\"]],\n        template: function RegisterComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\");\n            i0.ɵɵtext(4, \"Register\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"div\", 3)(6, \"input\", 4);\n            i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_6_listener($event) {\n              return ctx.username = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(7, \"div\", 3)(8, \"input\", 5);\n            i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_8_listener($event) {\n              return ctx.password = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(9, \"div\", 3)(10, \"input\", 6);\n            i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_10_listener($event) {\n              return ctx.confirm = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(11, \"div\", 3)(12, \"input\", 7);\n            i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_12_listener($event) {\n              return ctx.user_id = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(13, \"button\", 8);\n            i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_13_listener() {\n              return ctx.doRegister();\n            });\n            i0.ɵɵtext(14, \"Register\");\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"ngModel\", ctx.username);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngModel\", ctx.password);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngModel\", ctx.confirm);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngModel\", ctx.user_id);\n          }\n        },\n        dependencies: [i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.MinValidator, i3.NgModel],\n        encapsulation: 2\n      });\n    }\n  }\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}