{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.base = `${environment.gatewayUrl}/api/auth`;\n      this.token = sessionStorage.getItem('token');\n      this.role = sessionStorage.getItem('role');\n      this.userId = Number(sessionStorage.getItem('user_id') || 0);\n    }\n    get isLoggedIn() {\n      return !!this.token;\n    }\n    isAdmin() {\n      return this.role === 'admin';\n    }\n    login(username, password) {\n      return this.http.post(`${this.base}/login`, {\n        username,\n        password\n      });\n    }\n    register(username, password, user_id) {\n      return this.http.post(`${this.base}/register`, {\n        username,\n        password,\n        user_id\n      });\n    }\n    setSession(data) {\n      this.token = data.token;\n      this.role = data.role;\n      this.userId = data.user_id;\n      sessionStorage.setItem('token', this.token || '');\n      sessionStorage.setItem('role', this.role || '');\n      sessionStorage.setItem('user_id', String(this.userId || 0));\n    }\n    logout() {\n      this.token = null;\n      this.role = null;\n      this.userId = 0;\n      sessionStorage.clear();\n      this.router.navigateByUrl('/');\n    }\n    static {\n      this.ɵfac = function AuthService_Factory(t) {\n        return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthService,\n        factory: AuthService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}