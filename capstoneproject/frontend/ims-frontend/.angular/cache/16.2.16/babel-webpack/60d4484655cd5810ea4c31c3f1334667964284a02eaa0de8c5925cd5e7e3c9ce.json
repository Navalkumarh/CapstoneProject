{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nimport * as i2 from \"./auth.service\";\nexport let ClaimService = /*#__PURE__*/(() => {\n  class ClaimService {\n    constructor(api, auth) {\n      this.api = api;\n      this.auth = auth;\n    }\n    list() {\n      return this.api.get('/claims');\n    }\n    get(id) {\n      return this.api.get(`/claims/${id}`);\n    }\n    create(payload) {\n      return this.api.post('/claims', payload);\n    }\n    createForm(form) {\n      return this.api.post('/claims', form);\n    }\n    update(id, payload) {\n      return this.api.put(`/claims/${id}`, payload);\n    }\n    remove(id) {\n      return this.api.delete(`/claims/${id}`);\n    }\n    approve(id, remarks) {\n      return this.api.post(`/claims/${id}/approve`, {\n        remarks\n      });\n    }\n    reject(id, remarks) {\n      return this.api.post(`/claims/${id}/reject`, {\n        remarks\n      });\n    }\n    byUser(userId) {\n      return this.api.get(`/claims/by-user/${userId}`);\n    }\n    attachmentUrl(filename, dl = false) {\n      const token = this.auth.token;\n      const q = `?token=${token}${dl ? '&dl=1' : ''}`;\n      return `${environment.gatewayUrl}/uploads/${encodeURIComponent(filename)}${q}`;\n    }\n    static {\n      this.ɵfac = function ClaimService_Factory(t) {\n        return new (t || ClaimService)(i0.ɵɵinject(i1.ApiService), i0.ɵɵinject(i2.AuthService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ClaimService,\n        factory: ClaimService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ClaimService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}